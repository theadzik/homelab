---
# If airgapped, all K3s artifacts are already on the node.
- name: Download K3s install script
  when: airgap_dir is undefined
  ansible.builtin.get_url:
    url: https://get.k3s.io/
    timeout: 120
    dest: /usr/local/bin/k3s-install.sh
    owner: root
    group: root
    mode: 0755
  register: k8s_install_script

- name: Download K3s binary
  when: airgap_dir is undefined and k8s_install_script is changed
  ansible.builtin.command:
    cmd: /usr/local/bin/k3s-install.sh
  environment:
    INSTALL_K3S_SKIP_START: "true"
    INSTALL_K3S_VERSION: "{{ k3s_version }}"
    INSTALL_K3S_EXEC: "agent"
  changed_when: true

- name: Copy K3s service file
  register: k3s_agent_service
  ansible.builtin.template:
    src: "k3s-agent.service.j2"
    dest: "{{ systemd_dir }}/k3s-agent.service"
    owner: root
    group: root
    mode: "u=rw,g=r,o=r"

- name: Setup optional config file
  when: agent_config_yaml is defined
  block:
    - name: Make config directory
      ansible.builtin.file:
        path: "/etc/rancher/k3s"
        mode: 0755
        state: directory
    - name: Copy config values
      ansible.builtin.copy:
        content: "{{ agent_config_yaml }}"
        dest: "/etc/rancher/k3s/config.yaml"
        mode: 0644

- name: Enable and check K3s service
  ansible.builtin.systemd:
    name: k3s-agent
    daemon_reload: "{{ true if k3s_agent_service.changed else false }}"
    state: "{{ 'restarted' if k3s_agent_service.changed else 'started' }}"
    enabled: true

apiVersion: apps/v1
kind: Deployment
metadata:
  name: pihole
spec:
  replicas: 2
  template:
    spec:
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          matchLabelKeys:
            - pod-template-hash
      priorityClassName: high-priority
      imagePullSecrets:
        - name: dockerhub-image-pull-secret
      containers:
        - name: pihole
          image: pihole/pihole:latest
          imagePullPolicy: IfNotPresent
          readinessProbe:
            tcpSocket:
              port: 53
            timeoutSeconds: 1
            initialDelaySeconds: 5
            periodSeconds: 30
          livenessProbe:
            exec:
              command: ['dig', '@127.0.0.1', 'cloudflare.com']
            timeoutSeconds: 1
            initialDelaySeconds: 10
            periodSeconds: 30
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
          ports:
            - containerPort: 53
              protocol: "TCP"
            - containerPort: 53
              protocol: "UDP"
            - containerPort: 67
              protocol: "UDP"
            - containerPort: 80
              protocol: "TCP"
          securityContext:
            allowPrivilegeEscalation: true
            capabilities:
              add:
                - NET_ADMIN
          env:
            - name: TZ
              value: 'Europe/Warsaw'
            - name: DNSMASQ_LISTENING
              value: "all"
            - name: FTLCONF_LOCAL_IPV4
              value: '192.168.1.22'
            - name: FTLCONF_dns_upstreams
              value: '1.1.1.1;8.8.8.8'
            - name: FTLCONF_webserver_interface_theme
              value: 'default-dark'
            - name: FTLCONF_webserver_api_password
              valueFrom:
                secretKeyRef:
                  name: web-password
                  key: WEBPASSWORD
            - name: PIHOLE_UID
              value: "10004"
            - name: PIHOLE_GID
              value: "20004"
          volumeMounts:
            - mountPath: /etc/pihole/custom.list
              name: a-records
              subPath: custom.list
              readOnly: true
            - mountPath: /etc/dnsmasq.d/05-pihole-custom-cname.conf
              name: cname-records
              subPath: 05-pihole-custom-cname.conf
              readOnly: true
            - mountPath: /etc/pihole
              name: pihole-main
      volumes:
        - name: a-records
          configMap:
            name: a-records
        - name: cname-records
          configMap:
            name: cname-records
        - name: pihole-main
          persistentVolumeClaim:
            claimName: main-pvc

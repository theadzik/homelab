container_runtime: containerd
config:
  config.yaml.local: |
    api:
      server:
        use_forwarded_for_headers: true
        auto_registration:
          enabled: true
          token: "${REGISTRATION_TOKEN}"
          allowed_ranges:
            - "10.0.0.0/8"
    db_config:
      flush:
        bouncers_autodelete:
          api_key: "1d"
        agents_autodelete:
          login_password: "1d"

agent:
  acquisition:
    - namespace: ingress-nginx
      podName: ingress-nginx-*
      program: nginx-ingress-controller
  env:
    - name: COLLECTIONS
      value: "crowdsecurity/nginx"
lapi:
  resources:
    limits:
      memory: 500Mi
      cpu: 500m
    requests:
      cpu: 100m
      memory: 500Mi
  env:
    - name: ENROLL_INSTANCE_NAME
      value: 'home-prod'
    - name: ENROLL_TAGS
      value: 'k8s linux'
  envFrom:
    - secretRef:
        name: nginx-apikey
    - secretRef:
        name: enroll-key
  persistentVolume:
    data:
      enabled: true
      accessModes:
        - ReadWriteOnce
      storageClassName: "synology-nfs-delete"
      size: 1Gi
    config:
      enabled: true
      accessModes:
        - ReadWriteOnce
      storageClassName: "synology-nfs-delete"
      size: 1Gi
appsec:
  enabled: true
  replicas: 1
  strategy:
    type: Recreate
  resources:
    limits:
      memory: 250Mi
      cpu: 500m
    requests:
      cpu: 100m
      memory: 250Mi
  acquisitions:
    - source: appsec
      listen_addr: "0.0.0.0:7422"
      path: /
      appsec_config: crowdsecurity/appsec-default
      labels:
        type: appsec
  env:
    - name: COLLECTIONS
      value: "crowdsecurity/appsec-virtual-patching crowdsecurity/appsec-generic-rules"
